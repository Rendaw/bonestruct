{
    com.zarbosoft.merman.editor.visual.tags.FreeTag/value: "The value of the tag.",
    com.zarbosoft.merman.editor.visual.tags.GlobalTag/value: "The value of the tag.",
    com.zarbosoft.merman.editor.visual.tags.PartTag/value: "The value of the tag.",
    com.zarbosoft.merman.editor.visual.tags.StateTag/value: "The value of the tag.",
    com.zarbosoft.merman.editor.visual.tags.TypeTag/value: "The value of the tag.",
    com.zarbosoft.merman.modules.hotkeys.grammar.Sequence/nodes: "The list of rules to match in sequence.",
    com.zarbosoft.merman.modules.hotkeys.grammar.Terminal/key: "The input that is being pressed or released.",
    com.zarbosoft.merman.modules.hotkeys.grammar.Terminal/modifiers: "Inputs that must be active for this rule to match.",
    com.zarbosoft.merman.modules.hotkeys.grammar.Terminal/press: "True if the input is pressed, false if the input is released.",
    com.zarbosoft.merman.modules.hotkeys.grammar.Union/nodes: "All rules that may match.",
    com.zarbosoft.merman.modules.hotkeys.HotkeyRule/freeTyping: "Text keys that don't match a hotkey are passed to the selected primitive.",
    com.zarbosoft.merman.modules.hotkeys.HotkeyRule/hotkeys: "Hotkeys to use when the tags match.",
    com.zarbosoft.merman.modules.hotkeys.HotkeyRule/without: "These tags must be absent.",
    com.zarbosoft.merman.modules.hotkeys.HotkeyRule/with: "These tags must be present.",
    com.zarbosoft.merman.modules.hotkeys.Hotkeys/rules: "A list of hotkey rules.",
    com.zarbosoft.merman.modules.hotkeys.Hotkeys/showDetails: "Show the current input sequence and possible actions when an input is received in an incomplete sequence.",
    com.zarbosoft.merman.modules.hotkeys.Key/A: ,
    com.zarbosoft.merman.modules.hotkeys.Key/ACCEPT: ,
    com.zarbosoft.merman.modules.hotkeys.Key/ADD: ,
    com.zarbosoft.merman.modules.hotkeys.Key/AGAIN: ,
    com.zarbosoft.merman.modules.hotkeys.Key/ALL_CANDIDATES: ,
    com.zarbosoft.merman.modules.hotkeys.Key/ALPHANUMERIC: ,
    com.zarbosoft.merman.modules.hotkeys.Key/ALT: ,
    com.zarbosoft.merman.modules.hotkeys.Key/ALT_GRAPH: ,
    com.zarbosoft.merman.modules.hotkeys.Key/AMPERSAND: ,
    com.zarbosoft.merman.modules.hotkeys.Key/ASTERISK: ,
    com.zarbosoft.merman.modules.hotkeys.Key/AT: ,
    com.zarbosoft.merman.modules.hotkeys.Key/B: ,
    com.zarbosoft.merman.modules.hotkeys.Key/BACK_QUOTE: ,
    com.zarbosoft.merman.modules.hotkeys.Key/BACK_SLASH: ,
    com.zarbosoft.merman.modules.hotkeys.Key/BACK_SPACE: ,
    com.zarbosoft.merman.modules.hotkeys.Key/BEGIN: ,
    com.zarbosoft.merman.modules.hotkeys.Key/BRACELEFT: ,
    com.zarbosoft.merman.modules.hotkeys.Key/BRACERIGHT: ,
    com.zarbosoft.merman.modules.hotkeys.Key/C: ,
    com.zarbosoft.merman.modules.hotkeys.Key/CANCEL: ,
    com.zarbosoft.merman.modules.hotkeys.Key/CAPS: ,
    com.zarbosoft.merman.modules.hotkeys.Key/CHANNEL_DOWN: ,
    com.zarbosoft.merman.modules.hotkeys.Key/CHANNEL_UP: ,
    com.zarbosoft.merman.modules.hotkeys.Key/CIRCUMFLEX: ,
    com.zarbosoft.merman.modules.hotkeys.Key/CLEAR: ,
    com.zarbosoft.merman.modules.hotkeys.Key/CLOSE_BRACKET: ,
    com.zarbosoft.merman.modules.hotkeys.Key/CODE_INPUT: ,
    com.zarbosoft.merman.modules.hotkeys.Key/COLON: ,
    com.zarbosoft.merman.modules.hotkeys.Key/COLORED_KEY_0: ,
    com.zarbosoft.merman.modules.hotkeys.Key/COLORED_KEY_1: ,
    com.zarbosoft.merman.modules.hotkeys.Key/COLORED_KEY_2: ,
    com.zarbosoft.merman.modules.hotkeys.Key/COLORED_KEY_3: ,
    com.zarbosoft.merman.modules.hotkeys.Key/COMMA: ,
    com.zarbosoft.merman.modules.hotkeys.Key/COMMAND: ,
    com.zarbosoft.merman.modules.hotkeys.Key/COMPOSE: ,
    com.zarbosoft.merman.modules.hotkeys.Key/CONTEXT_MENU: ,
    com.zarbosoft.merman.modules.hotkeys.Key/CONTROL: ,
    com.zarbosoft.merman.modules.hotkeys.Key/CONVERT: ,
    com.zarbosoft.merman.modules.hotkeys.Key/COPY: ,
    com.zarbosoft.merman.modules.hotkeys.Key/CUT: ,
    com.zarbosoft.merman.modules.hotkeys.Key/D: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DEAD_ABOVEDOT: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DEAD_ABOVERING: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DEAD_ACUTE: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DEAD_BREVE: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DEAD_CARON: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DEAD_CEDILLA: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DEAD_CIRCUMFLEX: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DEAD_DIAERESIS: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DEAD_DOUBLEACUTE: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DEAD_GRAVE: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DEAD_IOTA: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DEAD_MACRON: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DEAD_OGONEK: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DEAD_SEMIVOICED_SOUND: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DEAD_TILDE: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DEAD_VOICED_SOUND: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DECIMAL: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DELETE: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DIGIT0: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DIGIT1: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DIGIT2: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DIGIT3: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DIGIT4: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DIGIT5: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DIGIT6: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DIGIT7: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DIGIT8: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DIGIT9: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DIVIDE: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DOLLAR: ,
    com.zarbosoft.merman.modules.hotkeys.Key/DOWN: ,
    com.zarbosoft.merman.modules.hotkeys.Key/E: ,
    com.zarbosoft.merman.modules.hotkeys.Key/EJECT_TOGGLE: ,
    com.zarbosoft.merman.modules.hotkeys.Key/END: ,
    com.zarbosoft.merman.modules.hotkeys.Key/ENTER: ,
    com.zarbosoft.merman.modules.hotkeys.Key/EQUALS: ,
    com.zarbosoft.merman.modules.hotkeys.Key/ESCAPE: ,
    com.zarbosoft.merman.modules.hotkeys.Key/EURO_SIGN: ,
    com.zarbosoft.merman.modules.hotkeys.Key/EXCLAMATION_MARK: ,
    com.zarbosoft.merman.modules.hotkeys.Key/F: ,
    com.zarbosoft.merman.modules.hotkeys.Key/F1: ,
    com.zarbosoft.merman.modules.hotkeys.Key/F10: ,
    com.zarbosoft.merman.modules.hotkeys.Key/F11: ,
    com.zarbosoft.merman.modules.hotkeys.Key/F12: ,
    com.zarbosoft.merman.modules.hotkeys.Key/F13: ,
    com.zarbosoft.merman.modules.hotkeys.Key/F14: ,
    com.zarbosoft.merman.modules.hotkeys.Key/F15: ,
    com.zarbosoft.merman.modules.hotkeys.Key/F16: ,
    com.zarbosoft.merman.modules.hotkeys.Key/F17: ,
    com.zarbosoft.merman.modules.hotkeys.Key/F18: ,
    com.zarbosoft.merman.modules.hotkeys.Key/F19: ,
    com.zarbosoft.merman.modules.hotkeys.Key/F2: ,
    com.zarbosoft.merman.modules.hotkeys.Key/F20: ,
    com.zarbosoft.merman.modules.hotkeys.Key/F21: ,
    com.zarbosoft.merman.modules.hotkeys.Key/F22: ,
    com.zarbosoft.merman.modules.hotkeys.Key/F23: ,
    com.zarbosoft.merman.modules.hotkeys.Key/F24: ,
    com.zarbosoft.merman.modules.hotkeys.Key/F3: ,
    com.zarbosoft.merman.modules.hotkeys.Key/F4: ,
    com.zarbosoft.merman.modules.hotkeys.Key/F5: ,
    com.zarbosoft.merman.modules.hotkeys.Key/F6: ,
    com.zarbosoft.merman.modules.hotkeys.Key/F7: ,
    com.zarbosoft.merman.modules.hotkeys.Key/F8: ,
    com.zarbosoft.merman.modules.hotkeys.Key/F9: ,
    com.zarbosoft.merman.modules.hotkeys.Key/FAST_FWD: ,
    com.zarbosoft.merman.modules.hotkeys.Key/FINAL: ,
    com.zarbosoft.merman.modules.hotkeys.Key/FIND: ,
    com.zarbosoft.merman.modules.hotkeys.Key/FULL_WIDTH: ,
    com.zarbosoft.merman.modules.hotkeys.Key/G: ,
    com.zarbosoft.merman.modules.hotkeys.Key/GAME_A: ,
    com.zarbosoft.merman.modules.hotkeys.Key/GAME_B: ,
    com.zarbosoft.merman.modules.hotkeys.Key/GAME_C: ,
    com.zarbosoft.merman.modules.hotkeys.Key/GAME_D: ,
    com.zarbosoft.merman.modules.hotkeys.Key/GREATER: ,
    com.zarbosoft.merman.modules.hotkeys.Key/H: ,
    com.zarbosoft.merman.modules.hotkeys.Key/HALF_WIDTH: ,
    com.zarbosoft.merman.modules.hotkeys.Key/HELP: ,
    com.zarbosoft.merman.modules.hotkeys.Key/HIRAGANA: ,
    com.zarbosoft.merman.modules.hotkeys.Key/HOME: ,
    com.zarbosoft.merman.modules.hotkeys.Key/I: ,
    com.zarbosoft.merman.modules.hotkeys.Key/INFO: ,
    com.zarbosoft.merman.modules.hotkeys.Key/INPUT_METHOD_ON_OFF: ,
    com.zarbosoft.merman.modules.hotkeys.Key/INSERT: ,
    com.zarbosoft.merman.modules.hotkeys.Key/INVERTED_EXCLAMATION_MARK: ,
    com.zarbosoft.merman.modules.hotkeys.Key/J: ,
    com.zarbosoft.merman.modules.hotkeys.Key/JAPANESE_HIRAGANA: ,
    com.zarbosoft.merman.modules.hotkeys.Key/JAPANESE_KATAKANA: ,
    com.zarbosoft.merman.modules.hotkeys.Key/JAPANESE_ROMAN: ,
    com.zarbosoft.merman.modules.hotkeys.Key/K: ,
    com.zarbosoft.merman.modules.hotkeys.Key/KANA: ,
    com.zarbosoft.merman.modules.hotkeys.Key/KANA_LOCK: ,
    com.zarbosoft.merman.modules.hotkeys.Key/KANJI: ,
    com.zarbosoft.merman.modules.hotkeys.Key/KATAKANA: ,
    com.zarbosoft.merman.modules.hotkeys.Key/KP_DOWN: ,
    com.zarbosoft.merman.modules.hotkeys.Key/KP_LEFT: ,
    com.zarbosoft.merman.modules.hotkeys.Key/KP_RIGHT: ,
    com.zarbosoft.merman.modules.hotkeys.Key/KP_UP: ,
    com.zarbosoft.merman.modules.hotkeys.Key/L: ,
    com.zarbosoft.merman.modules.hotkeys.Key/LEFT: ,
    com.zarbosoft.merman.modules.hotkeys.Key/LEFT_PARENTHESIS: ,
    com.zarbosoft.merman.modules.hotkeys.Key/LESS: ,
    com.zarbosoft.merman.modules.hotkeys.Key/M: ,
    com.zarbosoft.merman.modules.hotkeys.Key/META: ,
    com.zarbosoft.merman.modules.hotkeys.Key/MINUS: ,
    com.zarbosoft.merman.modules.hotkeys.Key/MODECHANGE: ,
    com.zarbosoft.merman.modules.hotkeys.Key/MOUSE_1: ,
    com.zarbosoft.merman.modules.hotkeys.Key/MOUSE_2: ,
    com.zarbosoft.merman.modules.hotkeys.Key/MOUSE_3: ,
    com.zarbosoft.merman.modules.hotkeys.Key/MOUSE_SCROLL_DOWN: ,
    com.zarbosoft.merman.modules.hotkeys.Key/MOUSE_SCROLL_UP: ,
    com.zarbosoft.merman.modules.hotkeys.Key/MULTIPLY: ,
    com.zarbosoft.merman.modules.hotkeys.Key/MUTE: ,
    com.zarbosoft.merman.modules.hotkeys.Key/N: ,
    com.zarbosoft.merman.modules.hotkeys.Key/NONCONVERT: ,
    com.zarbosoft.merman.modules.hotkeys.Key/NUMBER_SIGN: ,
    com.zarbosoft.merman.modules.hotkeys.Key/NUM_LOCK: ,
    com.zarbosoft.merman.modules.hotkeys.Key/NUMPAD0: ,
    com.zarbosoft.merman.modules.hotkeys.Key/NUMPAD1: ,
    com.zarbosoft.merman.modules.hotkeys.Key/NUMPAD2: ,
    com.zarbosoft.merman.modules.hotkeys.Key/NUMPAD3: ,
    com.zarbosoft.merman.modules.hotkeys.Key/NUMPAD4: ,
    com.zarbosoft.merman.modules.hotkeys.Key/NUMPAD5: ,
    com.zarbosoft.merman.modules.hotkeys.Key/NUMPAD6: ,
    com.zarbosoft.merman.modules.hotkeys.Key/NUMPAD7: ,
    com.zarbosoft.merman.modules.hotkeys.Key/NUMPAD8: ,
    com.zarbosoft.merman.modules.hotkeys.Key/NUMPAD9: ,
    com.zarbosoft.merman.modules.hotkeys.Key/O: ,
    com.zarbosoft.merman.modules.hotkeys.Key/OPEN_BRACKET: ,
    com.zarbosoft.merman.modules.hotkeys.Key/P: ,
    com.zarbosoft.merman.modules.hotkeys.Key/PAGE_DOWN: ,
    com.zarbosoft.merman.modules.hotkeys.Key/PAGE_UP: ,
    com.zarbosoft.merman.modules.hotkeys.Key/PASTE: ,
    com.zarbosoft.merman.modules.hotkeys.Key/PAUSE: ,
    com.zarbosoft.merman.modules.hotkeys.Key/PERIOD: ,
    com.zarbosoft.merman.modules.hotkeys.Key/PLAY: ,
    com.zarbosoft.merman.modules.hotkeys.Key/PLUS: ,
    com.zarbosoft.merman.modules.hotkeys.Key/POUND: ,
    com.zarbosoft.merman.modules.hotkeys.Key/POWER: ,
    com.zarbosoft.merman.modules.hotkeys.Key/PREVIOUS_CANDIDATE: ,
    com.zarbosoft.merman.modules.hotkeys.Key/PRINTSCREEN: ,
    com.zarbosoft.merman.modules.hotkeys.Key/PROPS: ,
    com.zarbosoft.merman.modules.hotkeys.Key/Q: ,
    com.zarbosoft.merman.modules.hotkeys.Key/QUOTE: ,
    com.zarbosoft.merman.modules.hotkeys.Key/QUOTEDBL: ,
    com.zarbosoft.merman.modules.hotkeys.Key/R: ,
    com.zarbosoft.merman.modules.hotkeys.Key/RECORD: ,
    com.zarbosoft.merman.modules.hotkeys.Key/REWIND: ,
    com.zarbosoft.merman.modules.hotkeys.Key/RIGHT: ,
    com.zarbosoft.merman.modules.hotkeys.Key/RIGHT_PARENTHESIS: ,
    com.zarbosoft.merman.modules.hotkeys.Key/ROMAN_CHARACTERS: ,
    com.zarbosoft.merman.modules.hotkeys.Key/S: ,
    com.zarbosoft.merman.modules.hotkeys.Key/SCROLL_LOCK: ,
    com.zarbosoft.merman.modules.hotkeys.Key/SEMICOLON: ,
    com.zarbosoft.merman.modules.hotkeys.Key/SEPARATOR: ,
    com.zarbosoft.merman.modules.hotkeys.Key/SHIFT: ,
    com.zarbosoft.merman.modules.hotkeys.Key/SHORTCUT: ,
    com.zarbosoft.merman.modules.hotkeys.Key/SLASH: ,
    com.zarbosoft.merman.modules.hotkeys.Key/SOFTKEY_0: ,
    com.zarbosoft.merman.modules.hotkeys.Key/SOFTKEY_1: ,
    com.zarbosoft.merman.modules.hotkeys.Key/SOFTKEY_2: ,
    com.zarbosoft.merman.modules.hotkeys.Key/SOFTKEY_3: ,
    com.zarbosoft.merman.modules.hotkeys.Key/SOFTKEY_4: ,
    com.zarbosoft.merman.modules.hotkeys.Key/SOFTKEY_5: ,
    com.zarbosoft.merman.modules.hotkeys.Key/SOFTKEY_6: ,
    com.zarbosoft.merman.modules.hotkeys.Key/SOFTKEY_7: ,
    com.zarbosoft.merman.modules.hotkeys.Key/SOFTKEY_8: ,
    com.zarbosoft.merman.modules.hotkeys.Key/SOFTKEY_9: ,
    com.zarbosoft.merman.modules.hotkeys.Key/SPACE: ,
    com.zarbosoft.merman.modules.hotkeys.Key/STAR: ,
    com.zarbosoft.merman.modules.hotkeys.Key/STOP: ,
    com.zarbosoft.merman.modules.hotkeys.Key/SUBTRACT: ,
    com.zarbosoft.merman.modules.hotkeys.Key/T: ,
    com.zarbosoft.merman.modules.hotkeys.Key/TAB: ,
    com.zarbosoft.merman.modules.hotkeys.Key/TRACK_NEXT: ,
    com.zarbosoft.merman.modules.hotkeys.Key/TRACK_PREV: ,
    com.zarbosoft.merman.modules.hotkeys.Key/U: ,
    com.zarbosoft.merman.modules.hotkeys.Key/UNDEFINED: ,
    com.zarbosoft.merman.modules.hotkeys.Key/UNDERSCORE: ,
    com.zarbosoft.merman.modules.hotkeys.Key/UNDO: ,
    com.zarbosoft.merman.modules.hotkeys.Key/UP: ,
    com.zarbosoft.merman.modules.hotkeys.Key/V: ,
    com.zarbosoft.merman.modules.hotkeys.Key/VOLUME_DOWN: ,
    com.zarbosoft.merman.modules.hotkeys.Key/VOLUME_UP: ,
    com.zarbosoft.merman.modules.hotkeys.Key/W: ,
    com.zarbosoft.merman.modules.hotkeys.Key/WINDOWS: ,
    com.zarbosoft.merman.modules.hotkeys.Key/X: ,
    com.zarbosoft.merman.modules.hotkeys.Key/Y: ,
    com.zarbosoft.merman.modules.hotkeys.Key/Z: ,
    com.zarbosoft.merman.modules.HoverType/node: "Display the type of the atom.",
    com.zarbosoft.merman.modules.HoverType/part: "Display the type of the atom part.",
    com.zarbosoft.merman.modules.Indicators/conversePadding: "Separation between the symbol and the converse edge of the screen.",
    com.zarbosoft.merman.modules.Indicators/converseStart: "If true, show the symbol by the near converse edge of the screen.  Otherwise, the far.",
    com.zarbosoft.merman.modules.Indicators.Indicator/id: "The symbol will have this type tag when shown.",
    com.zarbosoft.merman.modules.Indicators/indicators: "Show a floating indicator symbol based on the current global and selection tags.",
    com.zarbosoft.merman.modules.Indicators.Indicator/symbol: "The symbol to show.",
    com.zarbosoft.merman.modules.Indicators.Indicator/tags: "Show the symbol when these tags are present.",
    com.zarbosoft.merman.modules.Indicators/transversePadding: "Separation between the symbol and the transverse edge of the screen.",
    com.zarbosoft.merman.modules.Indicators/transverseStart: "If true, show the symbols at the start of the gutter.  Otherwise, the end.",
    com.zarbosoft.merman.modules.LuaActions/actions: "A mapping of action names to Lua functions.  Each function takes a single `context` argument and returns a boolean, true if the action modified the application state.  `context` is an object with the following functions: `act`.  `act` takes a string, the name of another action, and runs it, and returns true if the action modified the application state.",
    com.zarbosoft.merman.modules.Modes/states: ,
    com.zarbosoft.merman.modules.SelectionType/format: "The format of the text to display in the banner.",
    com.zarbosoft.merman.syntax.alignments.AbsoluteAlignmentDefinition/offset: "Offset in pixels.",
    com.zarbosoft.merman.syntax.alignments.RelativeAlignmentDefinition/base: "The id of the base alignment.",
    com.zarbosoft.merman.syntax.alignments.RelativeAlignmentDefinition/offset: "The difference between this alignment and this base in pixels.",
    com.zarbosoft.merman.syntax.back.BackArray/elements: "This sequence of elements will appear in the source file.",
    com.zarbosoft.merman.syntax.back.BackDataType: "An editable luxem type.",
    com.zarbosoft.merman.syntax.back.BackDataType/type: "Read the type into or write from the middle primitive with this id.",
    com.zarbosoft.merman.syntax.back.BackDataType/value: ,
    com.zarbosoft.merman.syntax.back.BackDataArray/middle: "Read the array into or write from the middle array with this id.",
    com.zarbosoft.merman.syntax.back.BackDataAtom/middle: "Read the child atom into or write from the middle atom with this id.",
    com.zarbosoft.merman.syntax.back.BackDataKey/middle: "Read the key into or write from the middle primitive with this id.",
    com.zarbosoft.merman.syntax.back.BackDataPrimitive/middle: "Read the primitive into or write from the middle primitive with this id.",
    com.zarbosoft.merman.syntax.back.BackDataRecord/middle: "Read the record into or write from the middle array with this id.",
    com.zarbosoft.merman.syntax.back.BackPrimitive/value: ,
    com.zarbosoft.merman.syntax.back.BackRecord/pairs: ,
    com.zarbosoft.merman.syntax.back.BackType/value: ,
    com.zarbosoft.merman.syntax.back.BackType/type: "The type string.",
    com.zarbosoft.merman.syntax.FreeAtomType/alignments: "Create alignments in the atom with the mapped ids.",
    com.zarbosoft.merman.syntax.FreeAtomType/autoChooseAmbiguity: "If this type is a suggestion and there are less than this many choices, auto-choose this type.",
    com.zarbosoft.merman.syntax.FreeAtomType/back: "This describes the format of the data on disk.  Modifiable back parts must have a corresponding middle part.",
    com.zarbosoft.merman.syntax.FreeAtomType/depthScore: "When calculating depth for windowing, this is the value the atom increases the depth score by.",
    com.zarbosoft.merman.syntax.FreeAtomType/front: "This describes how the atom is represented in the editor.  Modifiable must have a corresponding middle part.",
    com.zarbosoft.merman.syntax.FreeAtomType/associateForward: "When filling a suffix or prefix gap, the resultant atom will be raised up the tree based on its associativity.  For example, suppose in the document `a + b` you type `+ c`.  If `+` is back associative, the resultant tree will be equivalent to `(a + b) + c`.  If `+` is front associative, the resultant tree will be equivalent to `a + (b + c)`.  This is a translation of mathematical operator associativity.  Associativity only applies to atoms of the same `precedence`.",
    com.zarbosoft.merman.syntax.FreeAtomType/id: "The id of the atom type.  This must be unique among atom types and groups.",
    com.zarbosoft.merman.syntax.FreeAtomType/middle: "The editable data this atom contains.",
    com.zarbosoft.merman.syntax.FreeAtomType/name: "A name for human consumption.",
    com.zarbosoft.merman.syntax.FreeAtomType/precedence: "When filling a suffix or prefix gap, the resultant atom will be raised up the tree",
    com.zarbosoft.merman.syntax.FreeAtomType/tags: "Tags for this atom.",
    com.zarbosoft.merman.syntax.front.ConditionNode/invert: "Invert `is`.",
    com.zarbosoft.merman.syntax.front.ConditionNode/is: "The condition in which to show this front item.",
    com.zarbosoft.merman.syntax.front.ConditionNode.Is/PRECEDENT: "The atom is precedent relative to its parent.",
    com.zarbosoft.merman.syntax.front.ConditionValue/invert: "Invert `is`.",
    com.zarbosoft.merman.syntax.front.ConditionValue/is: "The condition in which to show this front item.",
    com.zarbosoft.merman.syntax.front.ConditionValue.Is/EMPTY: "The value is empty.",
    com.zarbosoft.merman.syntax.front.ConditionValue/middle: "The id of the middle part that the condition is based on.",
    com.zarbosoft.merman.syntax.front.FrontDataArray/ellipsis: "How to visualize the ellipsis.",
    com.zarbosoft.merman.syntax.front.FrontDataArray/middle: "The id of the corresponding middle part.",
    com.zarbosoft.merman.syntax.front.FrontDataArray/prefix: "What to display before every element in the array.",
    com.zarbosoft.merman.syntax.front.FrontDataArray/separator: "What to display between every two elements in the array.",
    com.zarbosoft.merman.syntax.front.FrontDataArray/suffix: "What to display after every element in the array.",
    com.zarbosoft.merman.syntax.front.FrontDataArray/tagFirst: "Add the `part` tag with value `first` to the first element.",
    com.zarbosoft.merman.syntax.front.FrontDataArray/tagLast: "Add the `part` tag with value `last` to the last element.",
    com.zarbosoft.merman.syntax.front.FrontDataArray/tags: "Add `free` tags with these values.",
    com.zarbosoft.merman.syntax.front.FrontDataAtom/ellipsis: "How to visualize the ellipsis.",
    com.zarbosoft.merman.syntax.front.FrontDataAtom/middle: "The id of the corresponding middle part.",
    com.zarbosoft.merman.syntax.front.FrontDataAtom/tags: "Tags for this front part.  These are only used as context when the selection is in this part.",
    com.zarbosoft.merman.syntax.front.FrontDataPrimitive/middle: "The id of the corresponding middle part.",
    com.zarbosoft.merman.syntax.front.FrontDataPrimitive/tags: "Add `free` tags with these values.",
    com.zarbosoft.merman.syntax.front.FrontSymbol/condition: "Only display this front element when the condition is matched.  A symbol's text will be used to match the atom type when filling a gap.  This symbol will be ignored though if it has a condition which is off by default.",
    com.zarbosoft.merman.syntax.front.FrontSymbol/gapKey: "Use this string as a key for matching the atom when filling a gap. This is intended for symbols that do not contain text (image) but it may also be used to override the text in a text node.",
    com.zarbosoft.merman.syntax.front.FrontSymbol/tags: "Add these tags to the symbol's brick.",
    com.zarbosoft.merman.syntax.front.FrontSymbol/type: "The type of symbol.",
    com.zarbosoft.merman.syntax.GapAtomType/frontPrefix: "Front parts to add before the gap text.",
    com.zarbosoft.merman.syntax.GapAtomType/frontSuffix: "Front parts to add after the gap text.",
    com.zarbosoft.merman.syntax.GapAtomType/tags: "Add `free` tags with these values.",
    com.zarbosoft.merman.syntax.middle.MiddleArray/type: "The id of the type of each atom.",
    com.zarbosoft.merman.syntax.middle.MiddleAtom/type: "The id of the type of the child atom.",
    com.zarbosoft.merman.syntax.middle.MiddleRecord/type: "The id of the type of the record elements.",
    com.zarbosoft.merman.syntax.Padding/converseEnd: "Pad the converse end by this many pixels.",
    com.zarbosoft.merman.syntax.Padding/converseStart: "Pad the converse start by this many pixels.",
    com.zarbosoft.merman.syntax.Padding/transverseEnd: "Pad the transverse end by this many pixels.",
    com.zarbosoft.merman.syntax.Padding/transverseStart: "Pad the transverse start by this many pixels.",
    com.zarbosoft.merman.syntax.PrefixGapAtomType/frontInfix: "Front parts to add between the gap text and child atom.",
    com.zarbosoft.merman.syntax.PrefixGapAtomType/frontPrefix: "Front parts to add before the gap text.",
    com.zarbosoft.merman.syntax.PrefixGapAtomType/frontSuffix: "Front parts to add after the child atom.",
    com.zarbosoft.merman.syntax.PrefixGapAtomType/tags: "Add `free` tags with these values.",
    com.zarbosoft.merman.syntax.style.BoxStyle/fill: "Fill the box.",
    com.zarbosoft.merman.syntax.style.BoxStyle/fillColor: "Color of the fill.",
    com.zarbosoft.merman.syntax.style.BoxStyle/line: "Outline the box.",
    com.zarbosoft.merman.syntax.style.BoxStyle/lineColor: "Color of the outline.",
    com.zarbosoft.merman.syntax.style.BoxStyle/lineThickness: "Thickness of the outline in pixels.",
    com.zarbosoft.merman.syntax.style.BoxStyle/padding: "Distance fron the contents to the edge of the box in pixels.",
    com.zarbosoft.merman.syntax.style.BoxStyle/roundEnd: "Round the end corner.",
    com.zarbosoft.merman.syntax.style.BoxStyle/roundOuterEdges: "Round the outer corners.",
    com.zarbosoft.merman.syntax.style.BoxStyle/roundRadius: "Round each rounded corner by this radius.",
    com.zarbosoft.merman.syntax.style.BoxStyle/roundStart: "Round the start corner.",
    com.zarbosoft.merman.syntax.style.ModelColor.RGB: "An RGB color.  Values are between 0 and 1, inclusive, with 1 being maximum intensity.",
    com.zarbosoft.merman.syntax.style.ModelColor.RGB/b: Blue,
    com.zarbosoft.merman.syntax.style.ModelColor.RGB/g: Green,
    com.zarbosoft.merman.syntax.style.ModelColor.RGB/r: Red,
    com.zarbosoft.merman.syntax.style.ModelColor.RGBA: "An RGB color with alpha.  Values are between 0 and 1, inclusive, with 1 being maximum intensity.",
    com.zarbosoft.merman.syntax.style.ModelColor.RGBA/a: "Alpha.  1 is opaque, 0 is transparent.",
    com.zarbosoft.merman.syntax.style.ModelColor.RGBA/b: Blue,
    com.zarbosoft.merman.syntax.style.ModelColor.RGBA/g: Green,
    com.zarbosoft.merman.syntax.style.ModelColor.RGBA/r: Red,
    com.zarbosoft.merman.syntax.style.ObboxStyle/fill: "Fill the obbox.",
    com.zarbosoft.merman.syntax.style.ObboxStyle/fillColor: "Fill color.",
    com.zarbosoft.merman.syntax.style.ObboxStyle/line: "Outline the obbox.",
    com.zarbosoft.merman.syntax.style.ObboxStyle/lineColor: "Color of the outline.  Also used for the cursor when there is no selection.",
    com.zarbosoft.merman.syntax.style.ObboxStyle/lineThickness: "Thickness of the outline in pixels.  Also used for the cursor when there is no selection.",
    com.zarbosoft.merman.syntax.style.ObboxStyle/padding: "Distance from the contents to the edge of the obbox in pixels.",
    com.zarbosoft.merman.syntax.style.ObboxStyle/roundConcave: "Round concave corners.",
    com.zarbosoft.merman.syntax.style.ObboxStyle/roundEnd: "Round the end corner.",
    com.zarbosoft.merman.syntax.style.ObboxStyle/roundInnerEdges: "Round the inner corners.",
    com.zarbosoft.merman.syntax.style.ObboxStyle/roundOuterEdges: "Round the outer corners.",
    com.zarbosoft.merman.syntax.style.ObboxStyle/roundRadius: "Round each rounded corner by this radius.",
    com.zarbosoft.merman.syntax.style.ObboxStyle/roundStart: "Round the start corner.",
    com.zarbosoft.merman.syntax.style.Style/alignment: "Align the converse start with the nearest alignment with this id.  The alignment is sought starting at the element's parent and moving upwards to the root of the window/document.",
    com.zarbosoft.merman.syntax.style.Style/box: "This only applies to boxes.",
    com.zarbosoft.merman.syntax.style.Style/color: "This only applies to text.",
    com.zarbosoft.merman.syntax.style.Style/font: "The font family name (JavaFX).  This only applies to text.",
    com.zarbosoft.merman.syntax.style.Style/fontSize: "This only applies to text.",
    com.zarbosoft.merman.syntax.style.Style/image: "The filename of the image, either absolute or relative to the syntax directory.  This only applies to image symbols.",
    com.zarbosoft.merman.syntax.style.Style/obbox: "This only applies to obboxes.",
    com.zarbosoft.merman.syntax.style.Style/rotate: "Rotation of the image, presumably in degrees.",
    com.zarbosoft.merman.syntax.style.Style/space: "The converse span of a space symbol.",
    com.zarbosoft.merman.syntax.style.Style/spaceAfter: "Add a converse space of this many pixels after the element.",
    com.zarbosoft.merman.syntax.style.Style/spaceBefore: "Add a converse space of this many pixels before the element.",
    com.zarbosoft.merman.syntax.style.Style/spaceTransverseAfter: "Add a transverse space of this many pixels after the element.",
    com.zarbosoft.merman.syntax.style.Style/spaceTransverseBefore: "Add a transverse space of this many pixels before the element.",
    com.zarbosoft.merman.syntax.style.Style/split: "Start this element on the next line.",
    com.zarbosoft.merman.syntax.style.Style/without: "A style will apply to a brick if both the brick and the global tags contain none of these.",
    com.zarbosoft.merman.syntax.style.Style/with: "These tags must be present.",
    com.zarbosoft.merman.syntax.SuffixGapAtomType/frontInfix: "Front parts to add between the gap text and child atom.",
    com.zarbosoft.merman.syntax.SuffixGapAtomType/frontPrefix: "Front parts to add before the child atom.",
    com.zarbosoft.merman.syntax.SuffixGapAtomType/frontSuffix: "Front parts to add after the gap text.",
    com.zarbosoft.merman.syntax.SuffixGapAtomType/tags: "Add `free` tags with these values.",
    com.zarbosoft.merman.syntax.symbol.SymbolText/text: "The text to display in the brick.",
    com.zarbosoft.merman.syntax.Syntax/animateCoursePlacement: "Slide courses into position.",
    com.zarbosoft.merman.syntax.Syntax/animateDetails: "Slide the contents of the details pane when it changes.",
    com.zarbosoft.merman.syntax.Syntax/background: "The background color of the document.",
    com.zarbosoft.merman.syntax.Syntax/bannerPad: "Pad the banner pane.",
    com.zarbosoft.merman.syntax.Syntax/converseDirection: "The direction of text flow in a line.  For English, this will be RIGHT.  Note that values other than RIGHT may not work, since JavaFX has limited text direction support.",
    com.zarbosoft.merman.syntax.Syntax/detailPad: "Pad the detail pane.",
    com.zarbosoft.merman.syntax.Syntax/detailSpan: "The max transverse span for details panes, excluding padding.",
    com.zarbosoft.merman.syntax.Syntax.Direction/DOWN: ,
    com.zarbosoft.merman.syntax.Syntax.Direction/LEFT: ,
    com.zarbosoft.merman.syntax.Syntax.Direction/RIGHT: ,
    com.zarbosoft.merman.syntax.Syntax.Direction/UP: ,
    com.zarbosoft.merman.syntax.Syntax/ellipsizeThreshold: "Limit the window to this depth span.",
    com.zarbosoft.merman.syntax.Syntax/gapChoiceStyle: "Style of the gap choice selection box.",
    com.zarbosoft.merman.syntax.Syntax/gapPlaceholder: "Placeholder for text in gap choice previews.",
    com.zarbosoft.merman.syntax.Syntax/gap: "The gap type is used when editing the document, for new data whose type is not yet known.",
    com.zarbosoft.merman.syntax.Syntax/groups: "Pseudo-types representing groups of types.  Group ids can be used anywhere a type id is required.",
    com.zarbosoft.merman.syntax.Syntax/layBrickBatchSize: "Generate bricks in this batch size when jumping, scrolling, and editing.",
    com.zarbosoft.merman.syntax.Syntax/modules: "A list of modules to activate.  Listed are modules bundled with this distribution, but addional modules may be installed and used.",
    com.zarbosoft.merman.syntax.Syntax/pad: "Pad the document.",
    com.zarbosoft.merman.syntax.Syntax/placeholder: "Character to substitute for non-printing characters in primitives.",
    com.zarbosoft.merman.syntax.Syntax/prefixGap: "The prefix gap type is similar to the gap type, but is used when enclosing an existing atom in a new atom, where the new atom visually precedes the existing atom.",
    com.zarbosoft.merman.syntax.Syntax/retryExpandFactor: "Retry course expansion when converse deficit has increased by this factor.",
    com.zarbosoft.merman.syntax.Syntax/root: "The type of the root array in a document.  This is not used when pasting code; in that case the context is used to determine the paste's potential root type.",
    com.zarbosoft.merman.syntax.Syntax/startWindowed: "When opening a document, immediately restrict the window to the tree that starts at the root atom.",
    com.zarbosoft.merman.syntax.Syntax/styles: "Styles control how bricks and other visual elements (selection, hover, banner, details, indicators, etc) are displayed.  When a visual element is styled, each style's tags are compared to the brick's tags in turn.  A composite style is built by merging the properties of each matching style, with later matching style properties overriding earlier properties.\n\nEach brick assumes a number of tags from their corresponding front parts, atom types, and any global tags.  Selection and hover visuals assume the tags of the relevant front part and any global tags.  The banner assumes the `part` tag `banner` and any global tags.  The details assume the `part` tag `details` and any global tags.  In addition to the details tag, if the details contain a selection, the choices additionally assume `part` tag `details_choice` and the selection assumes `part` tag `details_selection`.",
    com.zarbosoft.merman.syntax.Syntax/suffixGap: "The suffix gap type is similar to the gap type, but is used when enclosing an existing atom in a new atom, where the new atom visually succeeds the existing atom.",
    com.zarbosoft.merman.syntax.Syntax/transverseDirection: "The direction of successive lines.  For English, this will be DOWN.",
    com.zarbosoft.merman.syntax.Syntax/types: "The definitions of all distinct element types in a document.\nA type with the id '__gap' and a single middle primitive element named 'value' must exist.  This will be used as a placeholder when entering text before it is distinguishable as any other defined element.",
    com.zarbosoft.merman.syntax.Syntax.BackType: "The encoding of source files.",
    com.zarbosoft.merman.syntax.Syntax.BackType/LUXEM: "Back parts and source files are in luxem format.",
    com.zarbosoft.merman.syntax.Syntax.BackType/JSON: "Back parts and source files are in JSON format.",
    com.zarbosoft.merman.syntax.Padding: "Padding around source content (not including banner, details, indicators, etc).",
    com.zarbosoft.merman.editor.visual.tags.FreeTag: "A user specified tag.",
    com.zarbosoft.merman.editor.visual.tags.TypeTag: "A tag that indicates an atom type id.",
    com.zarbosoft.merman.editor.visual.tags.StateTag: "A tag that indicates an atom state, such as \"compact\".",
    com.zarbosoft.merman.editor.visual.tags.PartTag: "A tag that indicates an atom part type.",
    com.zarbosoft.merman.editor.visual.tags.GlobalTag: "A tag that indicates editor state, such as \"modified\" when the document has unsaved changes.",
    com.zarbosoft.merman.syntax.style.BoxStyle: "Properties if the style is applied to a box.",
    com.zarbosoft.merman.syntax.style.ObboxStyle: "Properties if the style is applied to an obbox (a disjoint box that may start and end on different lines).",
    com.zarbosoft.merman.syntax.style.Style: "All properties required to style a visual element.",
    com.zarbosoft.merman.modules.hotkeys.Key: "Any type of binary input.",
    com.zarbosoft.merman.modules.hotkeys.grammar.Terminal: "Match a single key.",
    com.zarbosoft.merman.modules.hotkeys.grammar.Union: "Match any of the subpatterns.",
    com.zarbosoft.merman.modules.hotkeys.grammar.Sequence: "Match each subpattern in order.",
    com.zarbosoft.merman.syntax.symbol.SymbolSpace: "This symbol is not drawn, but can take up space.",
    com.zarbosoft.merman.syntax.symbol.SymbolText: ,
    com.zarbosoft.merman.syntax.symbol.SymbolImage: ,
    com.zarbosoft.merman.syntax.front.FrontDataAtom: "Display a child atom.",
    com.zarbosoft.merman.syntax.front.FrontDataPrimitive: "Display text data.",
    com.zarbosoft.merman.syntax.front.FrontDataPrimitive/tags: "Add `free` tags with these values.",
    com.zarbosoft.merman.syntax.front.ConditionNode.Is: "The property of the atom.",
    com.zarbosoft.merman.syntax.front.ConditionNode: "Show or hide a front part based on properties of the atom.",
    com.zarbosoft.merman.syntax.front.ConditionValue.Is: "The property of the value.",
    com.zarbosoft.merman.syntax.front.ConditionValue: "Show or hide a front part based on properties of a value within an atom.",
    com.zarbosoft.merman.syntax.front.FrontSymbol: "Display a fixed symbol (text, space, image).",
    com.zarbosoft.merman.syntax.front.FrontDataArray: "Display an array of child atoms.",
    com.zarbosoft.merman.syntax.back.BackJSONTrue: "A fixed value.  Only valid with a JSON back type.",
    com.zarbosoft.merman.syntax.back.BackDataAtom: "An editable value.",
    com.zarbosoft.merman.syntax.back.BackJSONFloat: "A fixed value.  Only valid with a JSON back type.",
    com.zarbosoft.merman.syntax.back.BackJSONFloat/value: ,
    com.zarbosoft.merman.syntax.back.BackJSONNull: "A fixed value.  Only valid with a JSON back type.",
    com.zarbosoft.merman.syntax.back.BackPrimitive: "A fixed value.",
    com.zarbosoft.merman.syntax.back.BackDataArray: "An editable value.",
    com.zarbosoft.merman.syntax.back.BackJSONFalse: "A fixed value.  Only valid with a JSON back type.",
    com.zarbosoft.merman.syntax.back.BackDataRootArray: "An editable value.  De/serializes an array in luxem that has no begin `[` and end `]`.  This may only be used in the root atom type.",
    com.zarbosoft.merman.syntax.back.BackDataRootArray/middle: "The id of the corresponding middle part.",
    com.zarbosoft.merman.syntax.back.BackDataRecord: "An editable record.",
    com.zarbosoft.merman.syntax.back.BackDataJSONInt: "An editable value.  Only valid with a JSON back type.",
    com.zarbosoft.merman.syntax.back.BackDataJSONInt/middle: "The id of the corresponding middle part.",
    com.zarbosoft.merman.syntax.back.BackDataPrimitive: ,
    com.zarbosoft.merman.syntax.back.BackDataJSONFloat: "An editable value.  Only valid with a JSON back type.",
    com.zarbosoft.merman.syntax.back.BackDataJSONFloat/middle: "The id of the corresponding middle part.",
    com.zarbosoft.merman.syntax.back.BackDataKey: "A key in an array.",
    com.zarbosoft.merman.syntax.back.BackJSONInt: "A fixed value.  Only valid with a JSON back type.",
    com.zarbosoft.merman.syntax.back.BackJSONInt/value: ,
    com.zarbosoft.merman.syntax.back.BackType: "A fixed luxem type.",
    com.zarbosoft.merman.syntax.back.BackType/type: ,
    com.zarbosoft.merman.syntax.back.BackRecord: "A fixed record.",
    com.zarbosoft.merman.syntax.back.BackArray: "A fixed array.",
    com.zarbosoft.merman.syntax.middle.MiddleArray: ,
    com.zarbosoft.merman.syntax.middle.MiddleRecord: "A record is effectively an array with elements that have record keys.",
    com.zarbosoft.merman.syntax.middle.MiddleAtom: ,
    com.zarbosoft.merman.syntax.middle.MiddlePrimitive: ,
    com.zarbosoft.merman.syntax.middle.MiddlePrimitive/pattern: "This defines the pattern that the text of the primitive takes.  Note that if specified, the pattern will be checked every time the primitive is modified.  On long primitives this can be very slow.",
    com.zarbosoft.merman.syntax.middle.primitive.Any: "Match any single character.",
    com.zarbosoft.merman.syntax.middle.primitive.Digits: "Match any digit (0-9)",
    com.zarbosoft.merman.syntax.middle.primitive.Letters: "Match any letter (a-z, A-Z)",
    com.zarbosoft.merman.syntax.middle.primitive.PatternString: "An easy way to construct a sequence of characters.",
    com.zarbosoft.merman.syntax.middle.primitive.PatternString/string: "The character sequence to match.",
    com.zarbosoft.merman.syntax.middle.primitive.Repeat1: "Repeat the subpattern 1 or more times.",
    com.zarbosoft.merman.syntax.middle.primitive.Repeat1/pattern: ,
    com.zarbosoft.merman.syntax.middle.primitive.Repeat0: "Repeat the subpattern 0 or more times.",
    com.zarbosoft.merman.syntax.middle.primitive.Repeat0/pattern: ,
    com.zarbosoft.merman.syntax.middle.primitive.PatternUnion: "Match any one subpattern.",
    com.zarbosoft.merman.syntax.middle.primitive.PatternUnion/children: ,
    com.zarbosoft.merman.syntax.middle.primitive.PatternSequence: "Match each subpattern in sequence.",
    com.zarbosoft.merman.syntax.middle.primitive.PatternSequence/children: ,
    com.zarbosoft.merman.syntax.middle.primitive.Maybe: "Match the subpattern 0 or 1 times.",
    com.zarbosoft.merman.syntax.middle.primitive.Maybe/pattern: ,
    com.zarbosoft.merman.syntax.alignments.AbsoluteAlignmentDefinition: "Aligns bricks a fixed offset from the converse start of the screen.",
    com.zarbosoft.merman.syntax.alignments.ConcensusAlignmentDefinition: "Aligns all bricks with the brick with the rightmost converse start.",
    com.zarbosoft.merman.syntax.alignments.RelativeAlignmentDefinition: "Aligns bricks with an offset relative to another alignment.",
    com.zarbosoft.merman.syntax.FreeAtomType: "A general syntax defined atom type.",
    com.zarbosoft.merman.syntax.RootAtomType: "The type of the root atom.  In luxem documents, the root atom itself is outside the document, but the array (or whatever values it holds) become the document's root.",
    com.zarbosoft.merman.syntax.RootAtomType/alignments: "See FreeAtomType.",
    com.zarbosoft.merman.syntax.RootAtomType/back: "See FreeAtomType.",
    com.zarbosoft.merman.syntax.RootAtomType/front: "See FreeAtomType.",
    com.zarbosoft.merman.syntax.RootAtomType/middle: "See FreeAtomType.",
    com.zarbosoft.merman.syntax.RootAtomType/tags: "See FreeAtomType.",
    com.zarbosoft.merman.syntax.GapAtomType: "A gap.",
    com.zarbosoft.merman.syntax.PrefixGapAtomType: "A gap that wraps a child atom.  Fills to an atom that prefixes the child atom.",
    com.zarbosoft.merman.syntax.SuffixGapAtomType: "A gap that wraps a child atom.  Fills to an atom that suffixes the child atom.",
    com.zarbosoft.merman.modules.HoverType: "Show information about the atom hovered by the mouse.",
    com.zarbosoft.merman.modules.Indicators.Indicator: "An indicator is a single symbol that is shown or hidden based on active tags.",
    com.zarbosoft.merman.modules.Indicators: "Show symbols in the gutter based on tags.",
    com.zarbosoft.merman.modules.Modes: "Activate and deactivate global mode tags via actions.",
    com.zarbosoft.merman.modules.hotkeys.HotkeyRule: "Hotkey definitions that are enabled based on tags.",
    com.zarbosoft.merman.modules.hotkeys.Hotkeys: "Trigger actions with keyboard and mouse button presses.",
    com.zarbosoft.merman.modules.SelectionType: "Show information about the atom the cursor's in",
    com.zarbosoft.merman.modules.LuaActions: "Use Lua functions as actions.",
    com.zarbosoft.merman.syntax.Syntax.Direction: "A direction of text flow.",
    com.zarbosoft.merman.syntax.Syntax: "A syntax describes the de/serialization, interaction, and display of a document.  A document is a syntax tree encoded as luxem or JSON.  The syntax breaks the tree up into atoms which are the basis for interaction and display.\n\nA merman syntax file is a Lua script that returns a table describing the syntax. When you open a source file in merman, it automatically loads the corresponding syntax file from `~/.config/merman/syntaxes` (`~/Library/Preferences/merman/syntaxes` on Mac, something like `c:UsersUserAppDatamermansyntaxes` on Windows - `syntax_luxem.lua` is placed there the first time you run merman so you can search for that) based on the source file extension.",
    com.zarbosoft.merman.syntax.Syntax/prettySave: "Add spaces to make human reading of the source easier.",
    com.zarbosoft.merman.syntax.Syntax/scrollAlotFactor: "The percentage of the screen transverse span to jump when scrolling alot.",
    com.zarbosoft.merman.syntax.Syntax/scrollFactor: "The percentage of the screen transverse span to jump when scrolling.",
    com.zarbosoft.merman.syntax.Syntax/backType: "The encoding of source files with this syntax.",
    com.zarbosoft.merman.syntax.format.Literal: "Fixed text.",
    com.zarbosoft.merman.syntax.format.Literal/value: ,
    com.zarbosoft.merman.syntax.format.Reference: "Text provided dynamically.  Reference names depend on context - look at specific usages for valid names.",
    com.zarbosoft.merman.syntax.format.Reference/name: ,
    com.zarbosoft.merman.syntax.format.Format: "Formats a string which is the concatenation of all elements.",
    com.zarbosoft.merman.syntax.format.Format/elements: ,
},
